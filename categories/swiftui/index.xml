<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SwiftUI on 全国十大杰出不出名人物</title>
    <link>https://swiftuidev.github.io/categories/swiftui/</link>
    <description>Recent content in SwiftUI on 全国十大杰出不出名人物</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Jul 2019 11:55:59 +0800</lastBuildDate>
    
	<atom:link href="https://swiftuidev.github.io/categories/swiftui/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SwiftUI-TextField</title>
      <link>https://swiftuidev.github.io/post/swiftui_textfiled/</link>
      <pubDate>Wed, 31 Jul 2019 11:55:59 +0800</pubDate>
      
      <guid>https://swiftuidev.github.io/post/swiftui_textfiled/</guid>
      <description>TextField用来添加普通的输入框，一般常用作文本输入。
 import SwiftUI import PlaygroundSupport struct TextFieldPage: View { @State var name = &amp;quot;&amp;quot; @State var pass = &amp;quot;&amp;quot; var body: some View { VStack { TextField(self.$name, placeholder: Text(&amp;quot;Name&amp;quot;), onEditingChanged: { (changed) in print(changed) }) { print(self.name) } .textFieldStyle(.roundedBorder) .frame(width: 200) SecureField(self.$pass, placeholder: Text(&amp;quot;Pass&amp;quot;)) { print(self.pass) }.textFieldStyle(.roundedBorder) .frame(width: 200) } } } PlaygroundPage.current.liveView = UIHostingController(rootView: TextFieldPage())  </description>
    </item>
    
    <item>
      <title>SwiftUI-Text</title>
      <link>https://swiftuidev.github.io/post/swiftui_text/</link>
      <pubDate>Wed, 31 Jul 2019 11:13:28 +0800</pubDate>
      
      <guid>https://swiftuidev.github.io/post/swiftui_text/</guid>
      <description>Text用来展示一行或多行的文本内容，效果等同于UILabel，但更加优秀. 如果要创建Text， 只需通过Text(&amp;quot;Text&amp;quot;)即可创建. 也可以为文本添加多项属性，如字体、颜色、阴影、上左下右的间距等。
import SwiftUI import PlaygroundSupport struct TextPage: View { var body: some View { VStack { Text(&amp;quot;普通的Text&amp;quot;) Text(&amp;quot;有文字颜色的Text&amp;quot;).foregroundColor(.blue) Text(&amp;quot;加粗的Text&amp;quot;).bold() Text(&amp;quot;斜体的Text&amp;quot;).italic() Text(&amp;quot;阴影的Text&amp;quot;).shadow(color: .red, radius: 10, x: 0, y: 2) Text(&amp;quot;Text&amp;quot;).fontWeight(.medium) Text(&amp;quot;Text&amp;quot;).font(.system(.largeTitle)) Text(&amp;quot;https://swiftuidev.com&amp;quot;).underline().tapAction { print(&amp;quot;https://swiftuidev.com&amp;quot;) } Text(&amp;quot;https://swiftuidev.com&amp;quot;).strikethrough() Text(&amp;quot;Text 用来展示一行或多行的文本内容，效果等同于 UILabel，但更加优秀。 如果要创建 Text， 只需通过 Text(\&amp;quot;Text\&amp;quot;) 即可创建； 采用链式语法，也可以为文本添加多项属性，如字体、颜色、阴影、上左下右的间距等。&amp;quot;).lineLimit(nil) } } } PlaygroundPage.current.liveView = UIHostingController(rootView: TextPage())  </description>
    </item>
    
    <item>
      <title>不安装macOS10.15的情况下,使用xcode预览SwiftUI</title>
      <link>https://swiftuidev.github.io/post/no15-swiftui-xcode/</link>
      <pubDate>Tue, 30 Jul 2019 14:54:38 +0800</pubDate>
      
      <guid>https://swiftuidev.github.io/post/no15-swiftui-xcode/</guid>
      <description>由于不想测试新系统的诸多Bug,就没有更新到最新的系统,但是又想玩SwiftUI,所以找到了这么一个办法.
首先下载xcode11 Bete版
打开xcode新建一个playground文件,按照SwiftUI的写法写个Text,然后写入最关键代码:
import SwiftUI import PlaygroundSupport struct TextP: View { var body: some View { Text(&amp;quot;SwiftUI&amp;quot;) } } // 就是这行代码 PlaygroundPage.current.liveView = UIHostingController(rootView: TextP())  </description>
    </item>
    
  </channel>
</rss>